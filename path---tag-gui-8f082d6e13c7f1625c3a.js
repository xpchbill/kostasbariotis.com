webpackJsonp([62407818390769],{662:function(e,t){e.exports={data:{site:{siteMetadata:{title:"Kostas Bariotis' Blog",description:"I am Kostas Bariotis, a web developer, a proud wanderer and a passionate doer. My mission is to write clean and efficient code, to solve problems on the web and to learn something more.",siteUrl:"https://kostasbariotis.com"}}},pathContext:{posts:[{excerpt:"I gave a talk entitled  TDD with Node.js  in the  latest   SKGNode.js meetup . I explained the concept of TDD and described my tools of choice for integrating the TDD flow with Node.js. It was great. I didn't got into GUI testing and I saw a majorâ€¦",html:'<p>I gave a talk entitled <a href="http://slides.com/kostasbariotis/tdd-nodejs" target="_blank" rel="noreferrer noopener">TDD with Node.js</a> in the <del>latest</del> <a href="https://www.meetup.com/Thessaloniki-Node-js-Meetup/" target="_blank" rel="noreferrer noopener">SKGNode.js meetup</a>. I explained the concept of TDD and described my tools of choice for integrating the TDD flow with Node.js. It was great.</p>\n<p>I didn\'t got into GUI testing and I saw a major interest on that. So I decided to take a look at the current state of GUI testing. Here are the main tools that I came up with:</p>\n<h2 id="zombiejs"><a href="#zombiejs" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Zombie.js</h2>\n<p><a href="http://zombie.js.org/" target="_blank" rel="noreferrer noopener">Zombie</a> uses <a href="https://github.com/tmpvar/jsdom" target="_blank" rel="noreferrer noopener">jsdom</a> to parse the required HTML and Javascript and then simulate the desired behaviour. I find it a great tool for testing basic functionality in small apps.</p>\n<p>JSDom will create an in memory representation of the DOM and execute any Javascript dependencies so you can do a real testing scenario. Since it doesn\'t uses a real browser engine you can\'t find abnormalities of real world situations. So you can\'t rely on it for cross browser compatibility.</p>\n<p>I got very frustrated while trying to test AJAX powered pages. For SPA apps, Zombie wouldn\'t be an ideal solution.</p>\n<h2 id="casperjs"><a href="#casperjs" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Casper.js</h2>\n<p><a href="http://casperjs.org/" target="_blank" rel="noreferrer noopener">Casper</a> on the other hand, is a wrapper around <a href="http://phantomjs.org/" target="_blank" rel="noreferrer noopener">Phantom.js</a> which utilises a <a href="https://webkit.org/" target="_blank" rel="noreferrer noopener">Webkit</a> headless browser and will do a full rendering of your web page in order to test it. Since you will have a full representation of your site you can even <a href="https://github.com/sindresorhus/pageres" target="_blank" rel="noreferrer noopener">take screenshots for easier QA</a>.</p>\n<p>Casper.js has neat documentation and it\'s API is really easy to follow and adopt.</p>\n<h2 id="nightwatchjs"><a href="#nightwatchjs" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Nightwatch.js</h2>\n<p>Now, on the heavy side, we have <a href="http://www.seleniumhq.org/" target="_blank" rel="noreferrer noopener">Selenium</a>. Selenium is a set of projects. It started off by auto running browsers and injecting code into them so we can test it. Since then, browsers vendors kept evolving and expose a full set of control over their browsers so Selenium has native support over those, with the <a href="http://www.seleniumhq.org/projects/webdriver/" target="_blank" rel="noreferrer noopener">Selenium WebDriver</a>.</p>\n<p>You will have to install all the browsers you need to test locally and then use Selenium to run tests on them. It\'s pretty basic.</p>\n<p>Selenium\'s internals and configuration is a bit overcomplicated and if you don\'t need it, you don\'t have to get into it. <a href="http://nightwatchjs.org/" target="_blank" rel="noreferrer noopener">Nightwatch</a> is a great layer of abstraction on top of Selenium that will do all the heavy work for you.</p>\n<h1 id="at-the-end"><a href="#at-the-end" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>At the end</h1>\n<p>I am sure there are tone of other solutions out there. Although, you will have to do a research on your own before starting your GUI testing journey, at then end just pick one and start.</p>\n<p>Are you using something already? What\'s that?</p>',id:"/home/travis/build/kbariotis/kostasbariotis.com/blog/automated-gui-testing-solutions/index.md absPath of file >>> MarkdownRemark",timeToRead:2,frontmatter:{date:"2016-01-08T06:03:02.000Z",path:"/automated-gui-testing-solutions/",tags:"GUI, javascript, Testing, node.js",title:"Automated GUI Testing Solutions",draft:null}}],tag:"GUI",pagesSum:1,page:1}}}});
//# sourceMappingURL=path---tag-gui-8f082d6e13c7f1625c3a.js.map